// Code generated by astool. DO NOT EDIT.

package streams

import (
	typebranch "github.com/go-fed/activity/streams/impl/forgefed/type_branch"
	typecommit "github.com/go-fed/activity/streams/impl/forgefed/type_commit"
	typepush "github.com/go-fed/activity/streams/impl/forgefed/type_push"
	typerepository "github.com/go-fed/activity/streams/impl/forgefed/type_repository"
	typeticket "github.com/go-fed/activity/streams/impl/forgefed/type_ticket"
	typeticketdependency "github.com/go-fed/activity/streams/impl/forgefed/type_ticketdependency"
	vocab "github.com/go-fed/activity/streams/vocab"
)

// ForgeFedForgeFedBranchExtends returns true if Branch extends from the other's
// type.
func ForgeFedForgeFedBranchExtends(other vocab.Type) bool {
	return typebranch.ForgeFedBranchExtends(other)
}

// ForgeFedForgeFedCommitExtends returns true if Commit extends from the other's
// type.
func ForgeFedForgeFedCommitExtends(other vocab.Type) bool {
	return typecommit.ForgeFedCommitExtends(other)
}

// ForgeFedForgeFedPushExtends returns true if Push extends from the other's type.
func ForgeFedForgeFedPushExtends(other vocab.Type) bool {
	return typepush.ForgeFedPushExtends(other)
}

// ForgeFedForgeFedRepositoryExtends returns true if Repository extends from the
// other's type.
func ForgeFedForgeFedRepositoryExtends(other vocab.Type) bool {
	return typerepository.ForgeFedRepositoryExtends(other)
}

// ForgeFedForgeFedTicketExtends returns true if Ticket extends from the other's
// type.
func ForgeFedForgeFedTicketExtends(other vocab.Type) bool {
	return typeticket.ForgeFedTicketExtends(other)
}

// ForgeFedForgeFedTicketDependencyExtends returns true if TicketDependency
// extends from the other's type.
func ForgeFedForgeFedTicketDependencyExtends(other vocab.Type) bool {
	return typeticketdependency.ForgeFedTicketDependencyExtends(other)
}
